swagger: "2.0"
info:
  description: RestPR is a RESTful web api that enables competitive communities to create player leaderboard seasons using tournament match data from services like Challonge.com
  version: "0.0.1"
  title: RestPR
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
host: osu-test.apigee.net
basePath: /v1/restpr
schemes:
  - http
paths:
  /User:
    get:
      tags:
        - user
      summary: A list of users and their info
      description: "This returns the information obtained about the users, can be filtered using parameters"
      operationId: getUser
      produces:
        - application/json
        - application/xml
      parameters:
        - name: user_login
          in: query
          description: This is the user's login name
          required: false
          type: string
          format: string
        - name: display_name

          in: query
          description: This is the user's display name
          required: false
          type: string
          format: string

      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/user"
        "500":
          description: Internal server error

      security:
        - api_key: []
    post:
      tags:
        - user
      summary: Updates a user in the database with form data
      description: "Creates and updates a user into the database"
      operationId: updateUserWithForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
        - application/xml
      parameters:
        - name: body
          in: body
          description: "User representation that will be added to the database. display_name and user_login must be unique."
          required: true
          schema:
            $ref: "#/definitions/user"

      responses:
        "201":
          description: Resource created
          schema:
            $ref: "#/definitions/urilocation"

        "401":
          description: User is not authorized to perform this action
        "409":
          description: Invalid input
        "500":
          description: Internal server error
      security:
        - api_key: []

  /User/all:
    get:
        tags:
          - user
        summary: A list of users and their info
        description: "This returns the information obtained about the users, can be filtered using parameters"
        operationId: getUser
        produces:
          - application/json
          - application/xml
        parameters:
          - name: user_login
            in: query
            description: This is the user's login name
            required: false
            type: string
            format: string
          - name: display_name

            in: query
            description: This is the user's display name
            required: false
            type: string
            format: string

        responses:
          "200":
            description: Successful response
            schema:
              $ref: "#/definitions/user"
          "500":
            description: Internal server error

        security:
          - api_key: []
  /User/{user_id}:
    get:
      tags:
        - user
      summary: gets a specific user by their id
      description: "This returns the information obtained about the users including user_id, user_login, and display_name"
      operationId: getUserbyID
      produces:
        - application/json
        - application/xml
      parameters:

        - in: path
          name: user_id
          description: The user's id number
          required: true
          type: number
          format: integer

      responses:
        "200":
          description: Successful response
          schema:
            $ref: "#/definitions/user"
        "404":
          description: Resource not found
        "500":
          description: Internal server error
      security:
        - api_key: []

    put:
      tags:
        - user
      summary: Update an existing user
      description: "Adds updates to existing users"
      operationId: updateUser
      consumes:
        - application/json
        - application/xml
      produces:
        - application/json
        - application/xml
      parameters:

        - name: user_id
          in: path
          description: The user's id number
          required: true
          type: number
          format: integer

        - name: body
          in: body
          description: This is the user object being added to database
          required: true
          schema:
            $ref: "#/definitions/user"
      responses:
        "200":
          description: Successful response
        "201":
          description: Resource created
        "401":
          description: User not authorized to perform this action
        "404":
          description: Resourse not found
        "500":
          description: Internal server error
      security:
        - api_key: []

    delete:
      tags:
        - user
      summary: Deletes a user
      description: "Deletes user from database."
      operationId: deleteUser
      produces:
        - application/json
        - application/xml
      parameters:

        - in: header
          name: api_key
          description: ""
          required: true
          type: string

        - in: path
          name: user_id
          description: User id to delete
          required: true
          type: number
          format: integer

      responses:
        "200":
          description: Successful response
        "202":
          description: Delete request accepted
        "400":
          description: Invalid user value
        "401":
          description: User is not authorized to perform this action
        "500":
          description: Internal server error

      security:
        - api_key: []

securityDefinitions:
    api_key:
        type: apiKey
        name: api_key
        description: Rest PR API Key for general authentication
        in:   header

definitions:
  user:
    required:
      - user_login
      - display_name
    properties:
      user_id:
        type: number
        format: integer
      user_login:
        type: string
      display_name:
        type: string

  urilocation:
    required:
      - uri_location
    properties:
      uri_location:
        type: string
